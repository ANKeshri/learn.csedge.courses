name: 'Greetings'

on:
  issues:
    types: [opened]
  pull_request_target:
    types: [opened]

jobs:
  welcome:
    runs-on: ubuntu-latest
    steps:
      - name: Greet User on Issue
        if: github.event_name == 'issues'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = context.payload.issue;
            const author = issue.user.login;
            const issueNumber = issue.number;
            const greetingMessage = `Hey @${author}, Welcome to the project learn.csedge.courses! ðŸŽŠ Thanks for opening an issue! ðŸ™Œ Please wait for the issue to be assigned. Happy Coding!! âœ¨`;
            const octokit = new github.getOctokit("${{ secrets.GITHUB_TOKEN }}");
            await octokit.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: greetingMessage
            });

      - name: Greet User on Pull Request
        if: github.event_name == 'pull_request_target'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const author = pr.user.login;
            const prNumber = pr.number;
            const greetingMessage = `Hey @${author}, Welcome to the project learn.csedge.courses! ðŸŽŠ Thanks for your contribution! Your effort makes this project better. Keep it up! ðŸ™Œ Please wait for the PR to be reviewed. Happy Coding!! âœ¨`;
            const octokit = new github.getOctokit("${{ secrets.GITHUB_TOKEN }}");
            await octokit.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: greetingMessage
            });
